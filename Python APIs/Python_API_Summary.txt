1. Stack 
stack = []
stack.append(5)
stack.append(4)

while stack: 
  a = stack.pop()       # 4 is popped from stack
  b = stack.pop()       # 5 is popped from stack

2. Queue
: deque가  list나 heapq에 비해 성능이 빠르다
1) deque 방법
from collections import deque
queue = deque()

queue.append(5)
queue.append(2)

while queue:
  a = queue.popleft() # 5 is popped from queue
  b = queue.popleft() # 2 is popped from queue

cf)
queue.reverse() # queue의 내부 원소들을 역순화

queue.append(5)
queue.append(2)

while queue:
  a = queue.popleft() # 5 is popped from queue
  b = queue.popleft() # 2 is popped from queue


3. heapq 사용하기
import heapq

start = 1
q = []
heapq.heappush(q, (0, start))    # 첫번째 element ASC heap 구성. DESC heap은 원소에 -1을 곱해서 넣는 방식으로 구현

while q:
  distance, now = heapq.heappop(q)

4. 객체 Deep Copy  방법
import copy

tmp_key = copy.deepcopy(key)

5. map을 list로 만들기
food_storage = list(map(int, input().split()))

6. Dictionary
dic = {}
dic['파이썬'] = 'www.python.org'
dic['마이크로소프트'] = 'www.microsoft.com'

print(dic)
결과:  {'파이썬': 'www.python.org', '마이크로소프트': 'www.microsoft.com'}

print(list(dic.keys()))
결과: ['파이썬', '마이크로소프트']

print(list(dic.values()))
결과: ['www.python.org', 'www.microsoft.com']

print('파이썬' in dic.keys())
결과: True

print('www.python.org' in dic.values())
결과: True

dic.clear()
print(dic) 
결과: {}

7. list 관련 API
a = [1, 2, 3, 4, 5]
a.sort(reverse=True)  // 역순으로 정렬. a의 내용이 바뀜.

8. set 관련 API
head = [a, b, c]
tail = [d, b, c]
permute_set = set()
permute_set.add(tuple(head + tail)) // SET은 변경가능한 type인 list에서는 불가능.

8. 순열
from itertools import permutations
a = [1,2,3]
permute = permutations(a,2)
print(list(permute))

결과: [(1,2),(1,3),(2,1),(2,3),(3,1),(3,2)]

9. 조합
from itertools import combinations
a = [1,2,3]
combi = combinations(a,2)
    
print(list(combi))

결과: [(1,2),(1,3),(2,3)]

10. Global Variable
globvar = 0

def set_globvar_to_one():
    global globvar    # Needed to modify global copy of globvar
    globvar = 1

def print_globvar():
    print(globvar)     # No need for global declaration to read value of globvar

set_globvar_to_one()
print_globvar()       # Prints 


